// This file includes essentials for the user management
// you can override or extend it in your model
{
  "models": {
    "users": {
      "type": "Schema",
      "description": "This collection solely serves the purpose of user authentication.",
      "cacheOptions": {
        "enabled": false
      },
      "other": {
        "actions": {
          "fields": {
            "update": {
              "permissions": [["accessAsUser", "accessAsSuperAdmin"]]
            },
            "delete": {
              "permissions": "accessUsers"
            },
            "clone": {
              "permissions": "accessUsers"
            },
            "viewDetails": {
              "permissions": [["accessAsUser", "accessAsSuperAdmin"]]
            },
            "view": {
              "permissions": [["accessAsUser", "accessAsSuperAdmin"]]
            },
            "create": {
              "permissions": "accessUsers"
            }
          }
        }
      },
      "fields": {
        "login": {
          "type": "String",
          "unique": true,
          "required": true,
          "visible": true,
          "comment": "User login",
          "fullName": "Login",
          "description": "Unique use login. Could be email or anything else.",
          "permissions": {
            "read": "accessAsUser",
            "write": "accessAsSuperAdmin"
          }
        },
        "email": {
          "type": "Email",
          "required": true,
          "unique": true,
          "subtype": "Email",
          "fullName": "Email",
          "description": "This email is used for the password recovery purposes only"
        },
        "avatar": {
          "type": "Image",
          "fullName": "Photo",
          "description": "User's photo. Upload or take a picture using your webcam.",
          "arguments": {
            "minWidth": 50,
            "maxWidth": 1000,
            "minHeight": 50,
            "maxHeight": 1000,
            "aspectRatio": 1,
            "enableCropper": true,
            "maxFileSize": 10000000,
            "enablePhotoCapture": true,
            "enableDragAndDrop": true
          }
        },
        "password": {
          "type": "Password",
          "required": true,
          "subtype": "Password",
          "fullName": "Password",
          "description": "User password. Please make it complex."
        },
        "resetPasswordToken": {
          "type": "String",
          "visible": false,
          "generated": true,
          "fullName": "Reset Password Token",
          "description": "The system assigned token that is sent to the citizen when they request a password reset.",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "resetPasswordExpires": {
          "type": "Date",
          "visible": false,
          "generated": true,
          "fullName": "Reset Password Expires",
          "description": "The date the password token will expire.",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "roles": {
          "type": "LookupObjectID[]",
          "fullName": "Role names",
          "lookup": {
            "table": "roles",
            "foreignKey": "_id",
            "label": "name"
          },
          "permissions": {
            "read": [["accessAsUser", "accessAsSuperAdmin"]],
            "write": "accessAsSuperAdmin"
          }
        },
        "disabledAt": {
          "type": "DateTime",
          "description": "The date when current user was disabled.",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "failedLoginAttempts": {
          "type": "DateTime[]",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "lastLoginAt": {
          "type": "DateTime",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "loginCooldownAt": {
          "type": "DateTime",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "twoFactorRequirementText": {
          "type": "StaticHtml",
          "template": {
            "type": "inline",
            "link": "<h3>This system requires two-factor authentication for each user</h3>"
          },
          "showInDatatable": false,
          "showInForm": <@-this.ENV('MFA_REQUIRED')@>,
          "showInViewDetails": false
        },
        "enableTwoFactor": {
          "type": "Boolean",
          "fullName": "Two-factor authentication",
          "default": false,
          "description": "Two-factor authentication",
          "formRender": {
            "formRenderer": "otpAdminFormControl"
          },
          "showInDatatable": <@-this.ENV('MFA_ENABLED')@>,
          "showInForm": <@-this.ENV('MFA_ENABLED')@>,
          "showInViewDetails": <@-this.ENV('MFA_ENABLED')@>,
          "required": <@-this.ENV('MFA_REQUIRED')@>
        },

        "twoFactorSecret": {
          "type": "String",
          "description": "AuthSecret",
          "showInDatatable": false,
          "showInForm": false,
          "showInViewDetails": false,
          "transform": ["keepDbValue"]
        },

        "twoFactorToken": {
          "type": "String",
          "fullName": "2-Factor verification code",
          "description": "Code from auth app or backup code",
          "virtual": true,
          "validate": [
            {
              "validator": "regex",
              "arguments": {
                "regex": "^(\\d{<@-this.ENV('MFA_OTP_TOTP_TOKEN_LENGTH')@>}|\\d{<@-this.ENV('MFA_OTP_HOTP_TOKEN_LENGTH')@>})$",
                "regexOptions": ""
              },
              "errorMessages": {
                "default": "Invalid code length"
              }
            }
          ],
          "showInDatatable": false,
          "showInForm": false,
          "showInViewDetails": false
        },
        "twoFactorBackupCounter": {
          "type": "Number",
          "description": "HOTP counter seed",
          "showInDatatable": false,
          "showInForm": false,
          "showInViewDetails": false
        },
        "twoFactorUsedCounters": {
          "type": "Number[]",
          "description": "Used HOTP counters",
          "showInDatatable": false,
          "showInForm": false,
          "showInViewDetails": false
        },
        "twoFactorLoginCooldownAt": {
          "type": "DateTime",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          },
          "showInDatatable": <@-this.ENV('MFA_ENABLED')@>,
          "showInForm": <@-this.ENV('MFA_ENABLED')@>,
          "showInViewDetails": <@-this.ENV('MFA_ENABLED')@>
        },
        "accountInactivityLockedAt": {
          "type": "DateTime",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        }
      },
      "scopes": {
        "own": {
          "permissions": "accessAsUser",
          "where": "{ '_id': { $eq: this.req.user._id } }"
        },
        "allowed": {
          "permissions": "accessUsers"
        }
      }
    }
  }
}
