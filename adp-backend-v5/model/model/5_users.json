// This file includes essentials for the user management
// you can override or extend it in your model
{
  "models": {
    "users": {
      "type": "Schema",
      "description": "This collection solely serves the purpose of user authentication.",
      "other": {
        "actions": {
          "fields": {
            "update": {
              "permissions": "accessUsers"
            },
            "delete": {
              "permissions": "accessUsers"
            },
            "clone": {
              "permissions": "accessUsers"
            },
            "viewDetails": {
              "permissions": "accessUsers"
            },
            "view": {
              "permissions": "accessUsers"
            },
            "create": {
              "permissions": "accessUsers"
            }
          }
        }
      },
      "fields": {
        "login": {
          "type": "String",
          "unique": true,
          "required": true,
          "visible": true,
          "comment": "User login",
          "fullName": "Login",
          "description": "Unique use login. Could be email or anything else."
        },
        "email": {
          "type": "Email",
          "required": true,
          "unique": true,
          "subtype": "Email",
          "fullName": "Email",
          "description": "This email is used for the password recovery purposes only"
        },
        "avatar": {
          "type": "Image",
          "fullName": "Photo",
          "description": "User's photo. Upload or take a picture using your webcam.",
          "arguments": {
            "minWidth": 50,
            "maxWidth": 1000,
            "minHeight": 50,
            "maxHeight": 1000,
            "aspectRatio": 1,
            "enableCropper": true,
            "maxFileSize": 10000000,
            "enablePhotoCapture": true,
            "enableDragAndDrop": true
          }
        },
        "password": {
          "type": "Password",
          "required": true,
          "subtype": "Password",
          "fullName": "Password",
          "description": "User password. Please make it complex."
        },
        "resetPasswordToken": {
          "type": "String",
          "visible": false,
          "generated": true,
          "fullName": "Reset Password Token",
          "description": "The system assigned token that is sent to the citizen when they request a password reset."
        },
        "resetPasswordExpires": {
          "type": "Date",
          "visible": false,
          "generated": true,
          "fullName": "Reset Password Expires",
          "description": "The date the password token will expire."
        },
        "roles": {
          "type": "LookupObjectID[]",
          "fullName": "Role names",
          "lookup": {
            "table": "roles",
            "foreignKey": "_id",
            "label": "name"
          },
          "permissions": {
            "read": [["accessAsUser", "accessAsSuperAdmin"]],
            "write": "accessAsSuperAdmin"
          }
        },
        "disabledAt": {
          "type": "DateTime",
          "description": "The date when current user was disabled.",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "failedLoginAttempts": {
          "type": "DateTime[]",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "lastLoginAt": {
          "type": "DateTime",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        },
        "loginCooldownAt": {
          "type": "DateTime",
          "permissions": {
            "read": "accessAsSuperAdmin",
            "write": "accessAsSuperAdmin"
          }
        }
      },
      "scopes": {
        "own": {
          "permissions": "accessAsUser",
          "where": "{ '_id': { $eq: this.req.user._id } }"
        },
        "allowed": {
          "permissions": "accessUsers"
        }
      }
    }
  }
}
