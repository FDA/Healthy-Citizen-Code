{
  "models": {
    "bjrExternalCommands": {
      "type": "Schema",
      "actions": {
        "fields": {
          "update": {
            "permissions": "manageExternalCommands"
          },
          "delete": {
            "permissions": "manageExternalCommands"
          },
          "clone": {
            "permissions": "manageExternalCommands"
          },
          "viewDetails": {
            "permissions": [["viewExternalCommands", "manageExternalCommands", "runExternalCommands"]]
          },
          "view": {
            "permissions": [["viewExternalCommands", "manageExternalCommands", "runExternalCommands"]]
          },
          "create": {
            "permissions": "manageExternalCommands"
          },
          "runExternalCommand": {
            "permissions": "runExternalCommands",
            "showInTable": true,
            "icon": {
              "link": "play"
            },
            "backgroundColor": "#660",
            "borderColor": "#330",
            "textColor": "yellow",
            "fullName": "Run external command",
            "description": "Run external command",
            "action": {
              "type": "action",
              "link": "runExternalCommand",
              "redirectUrl": "/runExternalCommand"
            }
          }
        }
      },
      "scopes": {
        "own": {
          // Specified permissions are accessAsAnyone just to make it appear in app-model
          "permissions": "accessAsAnyone"
        }
      },
      "fields": {
        "name": {
          "type": "String",
          "description": "Command Name",
          "required": true,
          "unique": true
        },
        "description": {
          "type": "String",
          "description": "What this command is used for",
          "width": null
        },
        "command": {
          "type": "String",
          "description": "Command itself",
          "required": true,
          "width": null
        },
        "progressRegex": {
          "type": "String"
        },
        "logRegex": {
          "type": "String"
        }
      }
    }
  }
}
