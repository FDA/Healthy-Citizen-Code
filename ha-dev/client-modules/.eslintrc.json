{
  "parser": "babel-eslint",
  "extends": [
    "airbnb-base"
  ],
  "plugins": [],
  "env": {
    "browser": true
  },
  "globals": {
    "angular": true,
    "Highcharts": true,
    "d3": true,
    "hcUiUtil": true,
    "_": true,
    "$": true
  },
  "rules": {
    "import/no-useless-path-segments": "off",
    "import/prefer-default-export": false,
    // "semi": ["error", "never"],
    // "strict": 0,
    "no-console": 0,
    "no-debugger": 0,
    // "new-cap": 0,
    "no-param-reassign": 0,
    // "camelcase": 0,
    "no-underscore-dangle": 0,
    "no-plusplus": 0,
    "no-dynamic-require": 0,
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "object-curly-newline": [
      "error",
      {
        "consistent": true
      }
    ],
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    // allow use functions before its declaration
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true
      }
    ],
    // allow for.. of
    "no-restricted-syntax": [
      "error",
      // needed for functions with context
      //"FunctionExpression",
      "WithStatement",
      "BinaryExpression[operator='in']"
    ],
    // allow new Function
    "no-new-func": 0,
    "global-require": 0,
    "import/no-dynamic-require": 0,
    // resolve promise on 'close' event requires return
    "consistent-return": 0,
    // throw object for bluebird to catch like this: catch({code: 401}..)
    "no-throw-literal": 0,
    // to allow expressions like 'a && b()' or 'a ? b : c()'
    "no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true
      }
    ],
    // to allow unused next in express middleware (https://github.com/eslint/eslint/issues/1494)
    "no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "next"
      }
    ],

    // name function only in case its a recursive function
    "func-names": 0,

    "promise/catch-or-return": 0
  }
}
